{"version":3,"sources":["photos/Alabama.jpg","photos/Astros.jpg","photos/Clemson.jpg","photos/Cowboys.jpg","photos/Eagles.jpg","photos/Georgia.jpg","photos/Missouri.jpg","photos/Nebraska.jpg","photos/NotreDame.jpg","photos/OhioState.jpg","photos/Oregon.jpg","photos/Phillies.jpg","photos/Royals.jpg","photos/SacState.jpg","photos/Texas.jpg","App.js","index.js"],"names":["App","useState","currScore","setScore","bestScore","setBestScore","victories","setVictories","clickedItems","setClickedItems","increment","card","cardStr","key","sameCard","i","length","wrongCard","splice","createBoard","arr","blank","class","height","width","src","Alabama","alt","Astros","Clemson","Cowboys","Eagles","Georgia","Missouri","Nebraska","NotreDame","OhioState","Oregon","Phillies","Royals","SacState","Texas","sort","Math","random","React","createElement","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bded229.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Alabama.00a84e60.jpg\";","export default __webpack_public_path__ + \"static/media/Astros.bafd00b0.jpg\";","export default __webpack_public_path__ + \"static/media/Clemson.615e7fb0.jpg\";","export default __webpack_public_path__ + \"static/media/Cowboys.f4517f3b.jpg\";","export default __webpack_public_path__ + \"static/media/Eagles.77430bf6.jpg\";","export default __webpack_public_path__ + \"static/media/Georgia.ae0dce11.jpg\";","export default __webpack_public_path__ + \"static/media/Missouri.4475d942.jpg\";","export default __webpack_public_path__ + \"static/media/Nebraska.b6d8c7e5.jpg\";","export default __webpack_public_path__ + \"static/media/NotreDame.e07d2900.jpg\";","export default __webpack_public_path__ + \"static/media/OhioState.2ee7bf37.jpg\";","export default __webpack_public_path__ + \"static/media/Oregon.b8504c2c.jpg\";","export default __webpack_public_path__ + \"static/media/Phillies.09423475.jpg\";","export default __webpack_public_path__ + \"static/media/Royals.b009c643.jpg\";","export default __webpack_public_path__ + \"static/media/SacState.23753463.jpg\";","export default __webpack_public_path__ + \"static/media/Texas.5999724d.jpg\";","import React, { useState } from 'react';\n// Imports of all the photos, as relative path won't work\nimport Alabama from './photos/Alabama.jpg';\nimport Astros from './photos/Astros.jpg';\nimport Clemson from './photos/Clemson.jpg';\nimport Cowboys from './photos/Cowboys.jpg';\nimport Eagles from './photos/Eagles.jpg';\nimport Georgia from './photos/Georgia.jpg';\nimport Missouri from './photos/Missouri.jpg';\nimport Nebraska from './photos/Nebraska.jpg';\nimport NotreDame from './photos/NotreDame.jpg';\nimport OhioState from './photos/OhioState.jpg';\nimport Oregon from './photos/Oregon.jpg';\nimport Phillies from './photos/Phillies.jpg';\nimport Royals from './photos/Royals.jpg';\nimport SacState from './photos/SacState.jpg';\nimport Texas from './photos/Texas.jpg';\n\n\n//Used to shuffle the cards when a player selects a card\nconst shuffleArray = (arr) => {\n  arr.sort(() => Math.random() - 0.5);\n  return arr;\n}\n\nconst App = () => {\n  // States that will hold the score of the game\n  const [currScore, setScore]= useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [victories, setVictories] = useState(0);\n  const [clickedItems, setClickedItems] = useState([]);\n\n  const increaseScore = () => {\n    setScore(currScore + 1);\n  };\n\n  const increaseBestScore = () => {\n    setBestScore(bestScore + 1);\n  };\n\n  // Used to increment the count of the score, or the best score\n  const increment = (card) => {\n    let cardStr = card.key;\n  \n    \n    let sameCard = false;\n    for (let i = 0; i < clickedItems.length; i++) {\n      if (clickedItems[i] === cardStr) { // Checking for equality between cards that have been clicked                                    \n        sameCard = true;\n        break;\n      }\n    }\n\n    if (sameCard) {\n      wrongCard(); // Because there was an equality, the current score needs to be reset\n      clickedItems.splice(0, clickedItems.length); // Because we caught the equality, we have to \n      sameCard = false;\n    }\n    else {\n      setClickedItems([...clickedItems, card.key]) // The card had not been clicked before so push it the the array of clicked cards \n      increaseScore();  // Increment the score because the card has not been clicked before\n      if (bestScore === currScore) {\n        increaseBestScore();\n      }\n    }\n    \n\n    \n    \n    createBoard(); // Update the playing board\n  }\n\n\n  // Resets the score to zero\n  const wrongCard = () => {\n    setScore(0);\n  }\n  \n\n  const createBoard = () => {\n    let options = [\n      <div key='bigAl' class='border p-1'>\n        <img height='100%' width='100%' src={Alabama} alt='Big Al'></img>\n        <p><strong>Name</strong>: Big Al</p>\n        <p><strong>Team</strong>: Alabama</p>\n      </div>,\n      <div key='orbit' class='border p-1'>\n        <img height='100%' width='100%' src={Astros} alt='Orbit' ></img>\n        <p><strong>Name</strong>: Orbit</p>\n        <p><strong>Team</strong>: Houston Astros</p>\n      </div>,\n      <div key='the-tiger' class='border p-1'>\n        <img height='100%' width='100%' src={Clemson} alt='The Tiger' ></img>\n        <p><strong>Name</strong>: The Tiger</p>\n        <p><strong>Team</strong>: Clemson</p>\n      </div>,\n      <div key='rowdy' class='border p-1'>\n        <img height='100%' width='100%' src={Cowboys} alt='Rowdy' ></img>\n        <p><strong>Name</strong>: Rowdy</p>\n        <p><strong>Team</strong>: Dallas Cowboys</p>\n      </div>,\n      <div key='swoop' class='border p-1'>\n        <img height='100%' width='100%' src={Eagles} alt='Swoop'></img>\n        <p><strong>Name</strong>: Swoop</p>\n        <p><strong>Team</strong>: Philadelphia Eagles</p>\n      </div>,\n      <div key='uga' class='border p-1'>\n        <img height='100%' width='100%' src={Georgia} alt='Uga' ></img>\n        <p><strong>Name</strong>: Uga</p>\n        <p><strong>Team</strong>: Georgia</p>\n      </div>,\n      <div key='truman' class='border p-1'>\n        <img height='100%' width='100%' src={Missouri} alt='Truman the Tiger' ></img>\n        <p><strong>Name</strong>: Truman</p>\n        <p><strong>Team</strong>: Missouri</p>\n      </div>,\n      <div key='lil-red' class='border p-1'>\n        <img height='100%' width='100%' src={Nebraska} alt='Lil Red' ></img>\n        <p><strong>Name</strong>: Lil Red</p>\n        <p><strong>Team</strong>: Nebraska</p>\n      </div>,\n      <div key='leprechaun' class='border p-1'>\n        <img height='100%' width='100%' src={NotreDame} alt='Leprechaun' ></img>\n        <p><strong>Name</strong>: Leprechaun</p>\n        <p><strong>Team</strong>: Notre Dame</p>\n      </div>,\n      <div key='brutus' class='border p-1'>\n        <img height='100%' width='100%' src={OhioState} alt='Brutus' ></img>\n        <p><strong>Name</strong>: Brutus</p>\n        <p><strong>Team</strong>: Ohio State</p>\n      </div>,\n      <div key='duck' class='border p-1'>\n        <img height='100%' width='100%' src={Oregon} alt='The Oregon Duck' ></img>\n        <p><strong>Name</strong>: The Duck</p>\n        <p><strong>Team</strong>: Oregon</p>\n      </div>,\n      <div key='phillie-phanatic' class='border p-1'>\n        <img height='100%' width='100%' src={Phillies} alt='Phillie Phanatic'></img>\n        <p><strong>Name</strong>: Phillie Phanatic</p>\n        <p><strong>Team</strong>: Philadelphia Phillies</p>\n      </div>,\n      <div key='sluggerrr' class='border p-1'>\n        <img height='100%' width='100%' src={Royals} alt='Sluggerrr' ></img>\n        <p><strong>Name</strong>: Sluggerrr</p>\n        <p><strong>Team</strong>: Kansas City Royals</p>\n      </div>,\n      <div key='herky' class='border p-1'>\n        <img height='100%' width='100%' src={SacState} alt='Herky the Hornet' ></img>\n        <p><strong>Name</strong>: Herky</p>\n        <p><strong>Team</strong>: Sacramento State</p>\n      </div>,\n      <div key='bevo' class='border p-1'>\n        <img height='100%' width='100%' src={Texas} alt='Bevo' ></img>\n        <p><strong>Name</strong>: Bevo</p>\n        <p><strong>Team</strong>: Texas</p>\n      </div>,\n    ];\n\n    let blank = shuffleArray(options);\n    \n\n    let container = React.createElement('div', {class: 'container text-center'},\n      React.createElement('div', {class: 'row pt-3'}, [\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[0])}, blank[0]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[1])}, blank[1]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[2])}, blank[2]),\n      ]),\n      React.createElement('div', {class: 'row pt-3'},\n      [\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[3])}, blank[3]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[4])}, blank[4]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[5])}, blank[5])\n      ]),\n      React.createElement('div', {class: 'row pt-3'}, [\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[6])}, blank[6]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[7])}, blank[7]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[8])}, blank[8]),\n      ]),\n      React.createElement('div', {class: 'row pt-3'},\n      [\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[9])}, blank[9]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[10])}, blank[10]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[11])}, blank[11])\n      ]),\n      React.createElement('div', {class: 'row pt-3'}, \n      [\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[12])}, blank[12]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[13])}, blank[13]),\n        React.createElement('div', {class: 'col-sm-4', onClick: () => increment(blank[14])}, blank[14])\n      ])\n    );\n    \n    return container;\n  }\n\n  if (currScore === 15) {\n    wrongCard();\n    setVictories(victories + 1);\n  }\n\n  return (\n    <div>\n      <div class=\"text-center\">\n        <h1>Mascot Mania</h1>\n        <p>Don't Click on the Same Card Twice ... Or Else ...</p>\n        <div class=\"container\">\n          <div class='row'>\n            <div class='col-sm-4'><h4>Current Score: {currScore}</h4></div>\n            <div class='col-sm-4'><h4>Best Score: {bestScore}</h4></div>\n            <div class='col-sm-4'><h4>Victories: {victories}</h4></div>\n          </div>\n        </div>\n      </div>\n      {createBoard()}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}